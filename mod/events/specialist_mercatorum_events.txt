namespace = specialist_mercatorum

# triggered by on_specialist_subject_conversion_started
# root = agreement
# owner = country, overlord
# target = country, subject
agreement_event = {
	id = specialist_mercatorum.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		agreement_preset = preset_mercatorum
		NOT = { has_active_specialization = specialist_mercatorum }
	}
	immediate = {
		set_agreement_flag = convert_to_specialist_mercatorum
		owner = {
			if = {
				limit = { NOT = { is_variable_set = num_specialist_mercatorum } }
				set_variable = {
					which = num_specialist_mercatorum
					value = 0
				}
			}
			change_variable = {
				which = num_specialist_mercatorum
				value = 1
			}
		}
	}
}

# triggered by on_specialist_subject_conversion_started
# root = agreement
# owner = country, overlord
# target = country, subject
agreement_event = {
	id = specialist_mercatorum.2
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		NOT = { agreement_preset = preset_mercatorum }
		has_active_specialization = specialist_mercatorum
	}
	immediate = {
		set_agreement_flag = convert_from_specialist_mercatorum
	}
}

# triggered by on_specialist_subject_conversion_finished and on_specialist_subject_conversion_aborted
# root = agreement
# owner = country, overlord
# target = country, subject
agreement_event = {
	id = specialist_mercatorum.3
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_agreement_flag = convert_to_specialist_mercatorum }
	immediate = {
		remove_agreement_flag = convert_to_specialist_mercatorum
	}
}

# triggered by on_specialist_subject_conversion_finished and on_specialist_subject_conversion_aborted
# root = agreement
# owner = country, overlord
# target = country, subject
agreement_event = {
	id = specialist_mercatorum.4
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_agreement_flag = convert_from_specialist_mercatorum }
	immediate = {
		remove_agreement_flag = convert_from_specialist_mercatorum
		owner = {
			if = {
				limit = { is_variable_set = num_specialist_mercatorum }
				change_variable = {
					which = num_specialist_mercatorum
					value = -1
				}
			}
		}
	}
}

# triggered by on_specialist_subject_conversion_finished
# root = agreement
# owner = country, overlord
# target = country, subject
agreement_event = {
	id = specialist_mercatorum.5
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_agreement_flag = convert_to_specialist_mercatorum }
	immediate = {
		target = { save_event_target_as = new_specialist_mercatorum }
		owner = {
			every_owned_planet = {
				limit = {
					has_branch_office = yes
					branch_office_owner = { is_country = event_target:new_specialist_mercatorum }
					NOT = { has_modifier = specialist_mercatorum_branch_office }
				}
				add_modifier = { modifier = specialist_mercatorum_branch_office }
			}
			every_subject = {
				limit = { NOT = { is_country = event_target:new_specialist_mercatorum } }
				every_owned_planet = {
					limit = {
						has_branch_office = yes
						branch_office_owner = { is_country = event_target:new_specialist_mercatorum }
						NOT = { has_modifier = specialist_mercatorum_branch_office }
					}
					add_modifier = { modifier = specialist_mercatorum_branch_office }
				}
			}
			refresh_subject_count_loyalty_penalty = yes
		}
	}
}

# triggered by on_specialist_subject_conversion_finished
# root = agreement
# owner = country, overlord
# target = country, subject
agreement_event = {
	id = specialist_mercatorum.6
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_agreement_flag = convert_from_specialist_mercatorum }
	immediate = {
		target = { save_event_target_as = former_specialist_mercatorum }
		owner = {
			every_owned_planet = {
				limit = {
					has_branch_office = yes
					branch_office_owner = { is_country = event_target:former_specialist_mercatorum }
					has_modifier = specialist_mercatorum_branch_office
				}
				remove_modifier = specialist_mercatorum_branch_office
			}
			every_subject = {
				limit = { NOT = { is_country = event_target:former_specialist_mercatorum } }
				every_owned_planet = {
					limit = {
						has_branch_office = yes
						branch_office_owner = { is_country = event_target:former_specialist_mercatorum }
						has_modifier = specialist_mercatorum_branch_office
					}
					remove_modifier = specialist_mercatorum_branch_office
				}
			}
			refresh_subject_count_loyalty_penalty = yes
		}
	}
}

# triggered by on_country_destroyed
# root = country, destroyed
# from = country, destroyer (optional)
country_event = {
	id = specialist_mercatorum.7
	hide_window = yes
	is_triggered_only = yes
	trigger = { is_specialist_subject_type = { TYPE = mercatorum } }
	immediate = {
		overlord = {
			if = {
				limit = { is_variable_set = num_specialist_mercatorum }
				change_variable = {
					which = num_specialist_mercatorum
					value = -1
				}
			}
			refresh_subject_count_loyalty_penalty = yes
		}
	}
}

# triggered by on_branch_office_established
# root = planet, branch office location
# from = country, branch office owner
planet_event = {
	id = specialist_mercatorum.8
	hide_window = yes
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	trigger = {
		NOT = { has_modifier = specialist_mercatorum_branch_office }
		exists = from
		from = {
			is_specialist_subject_type = { TYPE = mercatorum }
			OR = {
				has_overlord = prev.owner
				prev.owner = {
					is_subject = yes
					has_overlord = prev.overlord
				}
			}
		}
	}
	immediate = {
		add_modifier = { modifier = specialist_mercatorum_branch_office }
	}
}

# triggered by on_branch_office_closed
# root = planet, branch office location
# from = country, branch office owner
planet_event = {
	id = specialist_mercatorum.9
	hide_window = yes
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	trigger = { has_modifier = specialist_mercatorum_branch_office }
	immediate = {
		remove_modifier = specialist_mercatorum_branch_office
	}
}

# meratorum specialist subjects must be megacorps - change it back and refund the unity
# triggered by on_post_government_changed
# root = country
country_event = {
	id = specialist_mercatorum.10
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_specialist_subject_type = { TYPE = mercatorum }
		is_megacorp = no
	}
	immediate = {
		# from 00_defines.txt: it costs (Empire Size) * X Unity to change Government Type
		# GOVERNMENT_CHANGE_EMPIRE_SIZE_MULT = 10.0
		export_trigger_value_to_variable = {
			trigger = empire_size
			variable = government_change_cost
		}
		multiply_variable = {
			which = government_change_cost
			value = 10
		}
		try_convert_to_mercatorum_megacorp = yes
		add_resource = {
			unity = 1
			multiplier = government_change_cost
		}
		if = {
			limit = { is_ai = yes }
			clear_variable = government_change_cost
		}
		else = {
			country_event = {
				id = specialist_mercatorum.11
			}
		}
	}
}

# triggered explicitly by specialist_mercatorum.10
country_event = {
	id = specialist_mercatorum.11
	is_triggered_only = yes
	title = specialist_mercatorum.11.title
	desc = specialist_mercatorum.11.desc
	picture = GFX_evt_unity_symbol
	option = {
		name = UNFORTUNATE
	}
	after = {
		clear_variable = government_change_cost
	}
}

# triggered explicitly by the situation specialist_mercatorum_dividends
# root = country, subject (mercatorum)
# from = situation
country_event = {
	id = specialist_mercatorum.275
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_subject = yes
		any_agreement = {
			owner = { is_country = root.overlord }
			target = { is_country = root }
			has_active_specialization = specialist_mercatorum
		}
	}
	immediate = {
		random_agreement = {
			limit = {
				owner = { is_country = root.overlord }
				target = { is_country = root }
				has_active_specialization = specialist_mercatorum
			}
			save_event_target_as = specialist_mercatorum_agreement
		}
		overlord = {
			random_list = {
				10 = {
					country_event = {
						id = specialist_mercatorum.2000
						scopes = {
							from = root
						}
					}
				}
				20 = {
					country_event = {
						id = specialist_mercatorum.2005
						scopes = {
							from = root
						}
					}
				}
				15 = {
					country_event = {
						id = specialist_mercatorum.2006
						scopes = {
							from = root
						}
					}
				}
				10 = {
					country_event = {
						id = specialist_mercatorum.2007
						scopes = {
							from = root
						}
					}
				}
				5 = {
					country_event = {
						id = specialist_mercatorum.2008
						scopes = {
							from = root
						}
					}
				}
				35 = {
					country_event = {
						id = specialist_mercatorum.2010
						scopes = {
							from = root
						}
					}
				}
				5 = {
					country_event = {
						id = specialist_mercatorum.2020
						scopes = {
							from = root
						}
					}
				}
			}
		}
	}
	after = {
		start_situation = {
			type = specialist_mercatorum_dividends
			target = this
		}
		destroy_situation = from
	}
}

# triggered by on_leader_spawned
# root = country
# from = leader
country_event = {
	id = specialist_mercatorum.400
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_specialist_subject_tier = {
			TYPE = mercatorum
			TIER = 2
		}
		exists = from
		from = { leader_class = governor }
	}
	immediate = {
		from = {
			add_specialist_trait_to_leader_in_pool = {
				TYPE = mercatorum
				CLASS = governor
			}
		}
	}
}

# research reward, triggered explicitly by specialist_mercatorum.275
# root = country, overlord
# from = country, subject (mercatorum)
# event_target:specialist_mercatorum_agreement = agreement, the mercatorum agreement between the overlord and subject
country_event = {
	id = specialist_mercatorum.2000
	title = specialist_mercatorum.2000.name
	desc = specialist_mercatorum.2000.desc
	picture = GFX_evt_physics_research
	picture = GFX_evt_society_research
	picture = GFX_evt_engineering_research
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	trigger = { exists = event_target:specialist_mercatorum_agreement }
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 1 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = society_research
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 2 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = society_research
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 3 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = society_research
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
	}
}

# basic resources reward, triggered explicitly by specialist_mercatorum.275
# root = country, overlord
# from = country, subject (mercatorum)
# event_target:specialist_mercatorum_agreement = agreement, the mercatorum agreement between the overlord and subject
country_event = {
	id = specialist_mercatorum.2005
	title = specialist_mercatorum.2000.name
	desc = specialist_mercatorum.2005.desc
	picture = GFX_evt_mining_operations
	picture = GFX_evt_mining_station
	show_sound = event_drilling
	is_triggered_only = yes
	trigger = { exists = event_target:specialist_mercatorum_agreement }
	weight_multiplier = {
		factor = 1
		modifier = {
			factor = 2
			event_target:specialist_mercatorum_agreement = { specialist_tier = 1 }
		}
		modifier = {
			factor = 0.5
			event_target:specialist_mercatorum_agreement = { specialist_tier = 3 }
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 1 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = food
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 2 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = food
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 3 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = food
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
	}
}

# advanced resources reward, triggered explicitly by specialist_mercatorum.275
# root = country, overlord
# from = country, subject (mercatorum)
# event_target:specialist_mercatorum_agreement = agreement, the mercatorum agreement between the overlord and subject
country_event = {
	id = specialist_mercatorum.2006
	title = specialist_mercatorum.2000.name
	desc = specialist_mercatorum.2006.desc
	picture = GFX_evt_ship_offloading_cargo
	show_sound = event_mystic_reveal_light
	is_triggered_only = yes
	trigger = { exists = event_target:specialist_mercatorum_agreement }
	weight_multiplier = {
		factor = 1
		modifier = {
			factor = 0.5
			event_target:specialist_mercatorum_agreement = { specialist_tier = 1 }
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 1 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = consumer_goods
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = alloys
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 2 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = consumer_goods
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = alloys
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 3 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = consumer_goods
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = alloys
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
	}
}

# strategic resources reward, triggered explicitly by specialist_mercatorum.275
# root = country, overlord
# from = country, subject (mercatorum)
# event_target:specialist_mercatorum_agreement = agreement, the mercatorum agreement between the overlord and subject
country_event = {
	id = specialist_mercatorum.2007
	title = specialist_mercatorum.2000.name
	desc = specialist_mercatorum.2007.desc
	picture = GFX_evt_strategic_resources
	show_sound = event_construction
	is_triggered_only = yes
	trigger = { exists = event_target:specialist_mercatorum_agreement }
	weight_multiplier = {
		factor = 1
		modifier = {
			factor = 1.5
			event_target:specialist_mercatorum_agreement = { specialist_tier >= 2 }
		}
		modifier = {
			factor = 1.5
			event_target:specialist_mercatorum_agreement = { specialist_tier >= 3 }
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 1 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = volatile_motes
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = exotic_gases
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = rare_crystals
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 2 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = volatile_motes
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = exotic_gases
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = rare_crystals
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 3 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = volatile_motes
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = exotic_gases
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = rare_crystals
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
	}
}

# rare resources reward, triggered explicitly by specialist_mercatorum.275
# root = country, overlord
# from = country, subject (mercatorum)
# event_target:specialist_mercatorum_agreement = agreement, the mercatorum agreement between the overlord and subject
country_event = {
	id = specialist_mercatorum.2008
	title = specialist_mercatorum.2000.name
	desc = specialist_mercatorum.2008.desc
	picture = GFX_evt_board_meeting
	show_sound = event_conversation
	is_triggered_only = yes
	trigger = { exists = event_target:specialist_mercatorum_agreement }
	weight_multiplier = {
		factor = 1
		modifier = {
			factor = 0
			event_target:specialist_mercatorum_agreement = { specialist_tier = 1 }
		}
		modifier = {
			factor = 0.5
			event_target:specialist_mercatorum_agreement = { specialist_tier = 2 }
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 1 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = sr_living_metal
			value = @tier1influencereward
			min = @tier1influencemin
			max = @tier1influencemax
		}
		add_monthly_resource_mult = {
			resource = sr_zro
			value = @tier1influencereward
			min = @tier1influencemin
			max = @tier1influencemax
		}
		add_monthly_resource_mult = {
			resource = sr_dark_matter
			value = @tier1influencereward
			min = @tier1influencemin
			max = @tier1influencemax
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 2 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = sr_living_metal
			value = @tier2influencereward
			min = @tier2influencemin
			max = @tier2influencemax
		}
		add_monthly_resource_mult = {
			resource = sr_zro
			value = @tier2influencereward
			min = @tier2influencemin
			max = @tier2influencemax
		}
		add_monthly_resource_mult = {
			resource = sr_dark_matter
			value = @tier2influencereward
			min = @tier2influencemin
			max = @tier2influencemax
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 3 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = sr_living_metal
			value = @tier3influencereward
			min = @tier3influencemin
			max = @tier3influencemax
		}
		add_monthly_resource_mult = {
			resource = sr_zro
			value = @tier3influencereward
			min = @tier3influencemin
			max = @tier3influencemax
		}
		add_monthly_resource_mult = {
			resource = sr_dark_matter
			value = @tier3influencereward
			min = @tier3influencemin
			max = @tier3influencemax
		}
	}
}

# cash reward, triggered explicitly by specialist_mercatorum.275
# root = country, overlord
# from = country, subject (mercatorum)
# event_target:specialist_mercatorum_agreement = agreement, the mercatorum agreement between the overlord and subject
country_event = {
	id = specialist_mercatorum.2010
	title = specialist_mercatorum.2000.name
	desc = specialist_mercatorum.2010.desc
	picture = GFX_evt_tradedeal
	show_sound = event_finding_loot
	is_triggered_only = yes
	trigger = { exists = event_target:specialist_mercatorum_agreement }
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 1 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 2 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier4materialreward
			min = @tier4materialmin
			max = @tier4materialmax
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 3 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier5materialreward
			min = @tier5materialmin
			max = @tier5materialmax
		}
	}
}

# jackpot reward, triggered explicitly by specialist_mercatorum.275
# root = country, overlord
# from = country, subject (mercatorum)
# event_target:specialist_mercatorum_agreement = agreement, the mercatorum agreement between the overlord and subject
country_event = {
	id = specialist_mercatorum.2020
	title = specialist_mercatorum.2000.name
	desc = specialist_mercatorum.2020.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	trigger = {
		exists = from
		from = { NOT = { has_modifier = country_defaulted } }
		exists = event_target:specialist_mercatorum_agreement
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 1 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = consumer_goods
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		locked_random_list = {
			1 = {
				add_monthly_resource_mult = {
					resource = minerals
					value = @tier1materialreward
					min = @tier1materialmin
					max = @tier1materialmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = food
					value = @tier1materialreward
					min = @tier1materialmin
					max = @tier1materialmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = alloys
					value = @tier1materialreward
					min = @tier1materialmin
					max = @tier1materialmax
				}
			}
		}
		locked_random_list = {
			1 = {
				add_monthly_resource_mult = {
					resource = physics_research
					value = @tier1researchreward
					min = @tier1researchmin
					max = @tier1researchmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = society_research
					value = @tier1researchreward
					min = @tier1researchmin
					max = @tier1researchmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = engineering_research
					value = @tier1researchreward
					min = @tier1researchmin
					max = @tier1researchmax
				}
			}
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 2 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier4materialreward
			min = @tier4materialmin
			max = @tier4materialmax
		}
		add_monthly_resource_mult = {
			resource = consumer_goods
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		locked_random_list = {
			1 = {
				add_monthly_resource_mult = {
					resource = minerals
					value = @tier2materialreward
					min = @tier2materialmin
					max = @tier2materialmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = food
					value = @tier2materialreward
					min = @tier2materialmin
					max = @tier2materialmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = alloys
					value = @tier2materialreward
					min = @tier2materialmin
					max = @tier2materialmax
				}
			}
		}
		locked_random_list = {
			1 = {
				add_monthly_resource_mult = {
					resource = volatile_motes
					value = @tier1materialreward
					min = @tier1materialmin
					max = @tier1materialmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = exotic_gases
					value = @tier1materialreward
					min = @tier1materialmin
					max = @tier1materialmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = rare_crystals
					value = @tier1materialreward
					min = @tier1materialmin
					max = @tier1materialmax
				}
			}
		}
		locked_random_list = {
			1 = {
				add_monthly_resource_mult = {
					resource = physics_research
					value = @tier2researchreward
					min = @tier2researchmin
					max = @tier2researchmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = society_research
					value = @tier2researchreward
					min = @tier2researchmin
					max = @tier2researchmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = engineering_research
					value = @tier2researchreward
					min = @tier2researchmin
					max = @tier2researchmax
				}
			}
		}
	}
	option = {
		name = EXCELLENT
		trigger = { event_target:specialist_mercatorum_agreement = { specialist_tier = 3 } }
		add_monthly_resource_mult = {
			resource = energy
			value = @tier5materialreward
			min = @tier5materialmin
			max = @tier5materialmax
		}
		add_monthly_resource_mult = {
			resource = consumer_goods
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		locked_random_list = {
			1 = {
				add_monthly_resource_mult = {
					resource = minerals
					value = @tier3materialreward
					min = @tier3materialmin
					max = @tier3materialmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = food
					value = @tier3materialreward
					min = @tier3materialmin
					max = @tier3materialmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = alloys
					value = @tier3materialreward
					min = @tier3materialmin
					max = @tier3materialmax
				}
			}
		}
		locked_random_list = {
			1 = {
				add_monthly_resource_mult = {
					resource = volatile_motes
					value = @tier2materialreward
					min = @tier2materialmin
					max = @tier2materialmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = exotic_gases
					value = @tier2materialreward
					min = @tier2materialmin
					max = @tier2materialmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = rare_crystals
					value = @tier2materialreward
					min = @tier2materialmin
					max = @tier2materialmax
				}
			}
		}
		locked_random_list = {
			1 = {
				add_monthly_resource_mult = {
					resource = sr_living_metal
					value = @tier1materialreward
					min = @tier1materialmin
					max = @tier1materialmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = sr_zro
					value = @tier1materialreward
					min = @tier1materialmin
					max = @tier1materialmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = sr_dark_matter
					value = @tier1materialreward
					min = @tier1materialmin
					max = @tier1materialmax
				}
			}
		}
		locked_random_list = {
			1 = {
				add_monthly_resource_mult = {
					resource = physics_research
					value = @tier3researchreward
					min = @tier3researchmin
					max = @tier3researchmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = society_research
					value = @tier3researchreward
					min = @tier3researchmin
					max = @tier3researchmax
				}
			}
			1 = {
				add_monthly_resource_mult = {
					resource = engineering_research
					value = @tier3researchreward
					min = @tier3researchmin
					max = @tier3researchmax
				}
			}
		}
	}
}