# derived from the executive ruler job
# * unity is produced for the overlord if the job is on a mercatorum planet (i.e. from the overlord's holding)
# * produces edicts fund for byzantine bureaucracies
# * adds loyalty production for the fellow subject towards the shared overlord
# * loyalty production is increased if the branch office owner (i.e. mercatorum) is a PR or media company
mercatorum_executive = {
	category = ruler
	condition_string = RULER_JOB_TRIGGER
	can_set_priority = no
	is_capped_by_modifier = yes
	icon = executive
	building_icon = holding_franchise_headquarters
	clothes_texture_index = 1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job

	resources = {
		category = planet_executives
		produces = {
			trigger = {
				exists = owner
				owner = { is_overlord = yes }
			}
			unity = 6
		}
		upkeep = {
			consumer_goods = 2
		}
	}

	overlord_resources = {
		category = planet_overlord_executives
		produces = {
			trigger = {
				OR = {
					NOT = { exists = owner }
					owner = { is_subject = yes }
				}
			}
			unity = 6
		}
	}

	triggered_planet_modifier = {
		potential = { always = yes }
		trade_value_add = 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|mercatorum_executive|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = { always = yes }
		planet_amenities_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_subject = yes }
			exists = planet
			planet = {
				has_branch_office = yes
				branch_office_owner = {
					is_specialist_subject_type = { TYPE = mercatorum }
					has_overlord = prevprev.owner.overlord
				}
			}
		}
		monthly_loyalty = 0.3
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = {
				exists = owner
				owner = { is_specialist_subject_type = { TYPE = mercatorum } }
				has_holding = {
					holding = holding_mercatorum_corporate_headquarters
					owner = owner.overlord
				}
			}
		}
		monthly_loyalty = 0.25
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_subject = yes }
			exists = planet
			planet = {
				has_branch_office = yes
				branch_office_owner = {
					is_specialist_subject_type = { TYPE = mercatorum }
					has_overlord = prevprev.owner.overlord
					OR = {
						has_valid_civic = civic_public_relations_specialists
						has_valid_civic = civic_media_conglomerate
					}
				}
			}
		}
		monthly_loyalty = 0.15
	}

	weight = {
		weight = @ruler_job_weight
		modifier = {
			add = @overlord_job_weight
			exists = owner
			owner = { is_subject = yes }
		}
		mult = value:job_weights_modifier|JOB|mercatorum_executive|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 5
			has_job = mercatorum_executive
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
			OR = { # contingency won't purge itself
				NOT = { exists = event_target:custodian_bot }
				AND = {
					exists = event_target:custodian_bot
					NOT = { species = { is_same_value = event_target:custodian_bot } }
				}
			}
		}
	}
}

# derived from the manager specialist job
# * adds loyalty production for the fellow subject towards the shared overlord
# * loyalty production is increased if the branch office owner (i.e. mercatorum) is a PR or media company
mercatorum_manager = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	can_set_priority = no
	is_capped_by_modifier = yes
	icon = manager
	building_icon = holding_franchise_headquarters
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_managers
		upkeep = {
			consumer_goods = 2
		}
	}

	overlord_resources = {
		category = planet_overlord_managers
		produces = {
			unity = 4
		}
	}

	triggered_planet_modifier = {
		potential = { always = yes }
		trade_value_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|mercatorum_manager|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = { has_active_building = building_league_offices }
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_subject = yes }
			exists = planet
			planet = {
				has_branch_office = yes
				branch_office_owner = {
					is_specialist_subject_type = { TYPE = mercatorum }
					has_overlord = prevprev.owner.overlord
				}
			}
		}
		monthly_loyalty = 0.2
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_subject = yes }
			exists = planet
			planet = {
				has_branch_office = yes
				branch_office_owner = {
					is_specialist_subject_type = { TYPE = mercatorum }
					has_overlord = prevprev.owner.overlord
					OR = {
						has_valid_civic = civic_public_relations_specialists
						has_valid_civic = civic_media_conglomerate
					}
				}
			}
		}
		monthly_loyalty = 0.1
	}

	weight = {
		weight = @specialist_job_weight
		modifier = {
			add = @overlord_job_weight
			exists = owner
			owner = { is_subject = yes }
		}
		mult = value:job_weights_modifier|JOB|mercatorum_manager|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			is_robot_pop = no
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = mercatorum_manager
		}
		modifier = {
			factor = 0.1
			is_enslaved = yes
			has_slavery_type = {
				type = slavery_indentured
				country = owner
			}
		}
	}
}