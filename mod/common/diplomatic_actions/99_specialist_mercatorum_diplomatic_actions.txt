# Form a commercial pact with another empire, increases value of both trade networks
# Usable by regular empires only. Raises trust over time.
action_form_commercial_pact = {
	icon = "GFX_diplomacy_status_commercial_pact"
	diplo_view_acceptance_icon = yes
	should_notify_all_communications = yes
	requires_actor_independence = yes
	requires_recipient_independence = yes
	AI_acceptance_base_value = -50
	action_type = positive
	possible = {
		custom_tooltip = {
			fail_text = "requires_actor_not_fanatic_purifiers"
			OR = {
				is_same_species = from
				NOT = { has_valid_civic = civic_fanatic_purifiers	}
			}
		}
		custom_tooltip = {
			fail_text = "requires_recipient_not_fanatic_purifiers"
			OR = {
				is_same_species = from
				from = { NOT = { has_valid_civic = civic_fanatic_purifiers } }
			}
		}
		if = {
			limit = { from = { has_valid_civic = civic_inwards_perfection } }
			if = {
				limit = {
					has_intel = {
						who = from
						intel = civics
					}
				}
				custom_tooltip = {
					fail_text = requires_recipient_not_inward_perfection
					always = no
				}
			}
			else = {
				custom_tooltip = {
					fail_text = diplo_action_no_low_intel
					always = no
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_actor_not_inward_perfection"
			NOT = { has_valid_civic = civic_inwards_perfection }
		}
		custom_tooltip = {
			fail_text = "requires_actor_not_gestalt_consciousness"
			is_gestalt = no
		}
		custom_tooltip = {
			fail_text = "requires_recipient_not_gestalt_consciousness"
			from = { is_gestalt = no }
		}
		custom_tooltip = {
			fail_text = "requires_actor_not_criminal_heritage"
			is_criminal_syndicate = no
		}
		if = {
			limit = { from = { is_criminal_syndicate = yes } }
			if = {
				limit = {
					has_intel = {
						who = from
						intel = civics
					}
				}
				custom_tooltip = {
					fail_text = requires_recipient_not_criminal_heritage
					always = no
				}
			}
			else = {
				custom_tooltip = {
					fail_text = diplo_action_no_low_intel
					always = no
				}
			}
		}
		custom_tooltip = {
			fail_text = "federation_actor_no_separate_treaties"
			NAND = {
				has_federation = yes
				federation = { has_federation_law = treaties_separate_no }
				NOT = { federation = { any_member = { is_same_value = root.from } } }
			}
		}
		custom_tooltip = {
			fail_text = "federation_recipient_no_separate_treaties"
			from = {
				NAND = {
					has_federation = yes
					federation = {
						has_federation_law = treaties_separate_no
					}
					NOT = { federation = { any_member = { is_same_value = root } } }
				}
			}
		}
		if = {
			limit = {
				from = { has_valid_civic = civic_pompous_purists }
				NOT = { root = { is_overlord_to = from } }
			}
			if = {
				limit = {
					has_intel = {
						who = from
						intel = civics
					}
				}
				custom_tooltip = {
					fail_text = requires_recipient_not_pompous
					always = no
				}
			}
			else = {
				custom_tooltip = {
					fail_text = diplo_action_no_low_intel
					always = no
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_good_or_better_opinion"

			OR = {
				opinion_level = { who = from level >= good }
				is_improving_relations_with = from
			}
		}
	}
	ai_acceptance = {
		base = 0
		modifier = { # same overlord, other subject is a mercatorum
			add = 200
			desc = action_form_commercial_pact_mercatorum_acceptance_subject_to_subject
			is_subject = yes
			exists = from
			from = {
				is_specialist_subject_type = { TYPE = mercatorum }
				has_overlord = prev.overlord
			}
		}
		modifier = { # overlord to mercatorum
			add = 200
			desc = action_form_commercial_pact_mercatorum_acceptance_overlord_to_subject
			exists = from
			from = {
				is_specialist_subject_type = { TYPE = mercatorum }
				has_overlord = prev
			}
		}
		modifier = { # mercatorum to overlord
			add = 200
			desc = action_form_commercial_pact_mercatorum_acceptance_subject_to_overlord
			is_specialist_subject_type = { TYPE = mercatorum }
			exists = from
			has_overlord = from
		}
	}
	should_ai_propose = {
		base = 0
		modifier = { # same overlord, this subject is a mercatorum
			add = 100
			is_specialist_subject_type = { TYPE = mercatorum }
			exists = from
			from = {
				is_subject = yes
				has_overlord = prev.overlord
			}
		}
		modifier = { # overlord to mercatorum
			add = 100
			exists = from
			from = {
				is_specialist_subject_type = { TYPE = mercatorum }
				has_overlord = prev
			}
		}
		modifier = { # mercatorum to overlord
			add = 100
			is_specialist_subject_type = { TYPE = mercatorum }
			exists = from
			has_overlord = from
		}
	}
}

# Break an existing commercial pact, harms relations and sets a 10 year truce.
action_break_commercial_pact = {
	icon = "GFX_diplomacy_status_commercial_pact"
	auto_accepted = yes
	should_notify_all_communications = yes
	should_show_auto_accept_message_recipient = yes
	action_type = negative
	ai_acceptance = {
		base = 0
		modifier = { # same overlord, either subject is a mercatorum
			subtract = 200
			desc = action_break_commercial_pact_mercatorum_acceptance_subject_to_subject
			is_subject = yes
			exists = from
			from = {
				OR = {
					is_specialist_subject_type = { TYPE = mercatorum }
					prev = { is_specialist_subject_type = { TYPE = mercatorum } }
				}
				has_overlord = prev.overlord
			}
		}
		modifier = { # overlord to mercatorum
			subtract = 200
			desc = action_break_commercial_pact_mercatorum_acceptance_overlord_to_subject
			exists = from
			from = {
				is_specialist_subject_type = { TYPE = mercatorum }
				has_overlord = prev
			}
		}
		modifier = { # mercatorum to overlord
			subtract = 200
			desc = action_break_commercial_pact_mercatorum_acceptance_subject_to_overlord
			is_specialist_subject_type = { TYPE = mercatorum }
			exists = from
			has_overlord = from
		}
	}
	should_ai_propose = {
		base = 0
		modifier = { # same overlord, either subject is a mercatorum
			subtract = 100
			is_subject = yes
			exists = from
			from = {
				OR = {
					is_specialist_subject_type = { TYPE = mercatorum }
					prev = { is_specialist_subject_type = { TYPE = mercatorum } }
				}
				has_overlord = prev.overlord
			}
		}
		modifier = { # overlord to mercatorum
			subtract = 100
			exists = from
			from = {
				is_specialist_subject_type = { TYPE = mercatorum }
				has_overlord = prev
			}
		}
		modifier = { # mercatorum to overlord
			subtract = 100
			is_specialist_subject_type = { TYPE = mercatorum }
			exists = from
			has_overlord = from
		}
	}
}