# fired when a new leader is generated for an empire, to be available for recruitment
# thi = country, owner of the leader
# from = leader, newly-spawned
on_leader_spawned = {
	events = {
		specialist_mercatorum.400
	}
}

# fired when a country is destroyed
# this = country, destroyed
# from = country, destroyer (optional)
on_country_destroyed = {
	events = {
		specialist_mercatorum.7
	}
}

# fired when an empire becomes a subject
# root = country, subject
# from = country, overlord
on_becoming_subject = {
	events = {
		specialist_mercatorum.17
	}
}

# fired when a subject country becomes independent
# note: this is a custom on_action, so it may not fire for all uses of set_subject_of = { who = none }
# this = country, former subject
# from = country, former overlord
on_becoming_independent = {
	events = {
		specialist_mercatorum.19
	}
}

# fired when a subject has started converting to a specialist type
# this = agreement
# owner = country, overlord
# target = country, subject
on_specialist_subject_conversion_started = {
	events = {
		specialist_mercatorum.1
		specialist_mercatorum.2
	}
}

# fired when a subject has finished converting to a specialist type
# this = agreement
# owner = country, overlord
# target = country, subject
on_specialist_subject_conversion_finished = {
	events = {
		specialist_mercatorum.5
		specialist_mercatorum.6
		specialist_mercatorum.3
		specialist_mercatorum.4
	}
}

# fired when a subject specialist conversion has been aborted
# this = agreement
# owner = country, overlord
# target = country, subject
on_specialist_subject_conversion_aborted = {
	events = {
		specialist_mercatorum.3
		specialist_mercatorum.4
	}
}

# fired when a branch office is established
# this = planet, branch office location
# from = country, branch office owner
on_branch_office_established = {
	events = {
		specialist_mercatorum.8
	}
}

# fired when a branch office is closed
# this = planet, branch office location
# from = country, branch office owner
on_branch_office_closed = {
	events = {
		specialist_mercatorum.9
	}
}

# fired whenever a new owner is set for a planet, be it after a war or through a trade
# this = planet
# from = country, new owner
# fromfrom = country, former owner (if any)
on_planet_transfer = {
	events = {
		specialist_mercatorum.18
	}
}

# fired just as country is changing its government, after the new one is applied
# this = country
on_post_government_changed = {
	events = {
		specialist_mercatorum.10
	}
}